<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="23dae86f-43d4-4f4d-8395-d7eab9a320c6" name="Changes" comment="Section 22.378(Working with Databases: JPA Challenge):&#10;reviewing my code after seeing Tim's solution:&#10;&#10;fixed my Album .toString() formatting error, added his result manipulation (cosmetic) on SongQuery,&#10;&#10;also adopted for 'var' with JPA query results, as to not require switching between List&lt;Artist&gt; List&lt;Tuple&gt; or List&lt;String&gt;">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/SongQuery.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/SongQuery.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2gUIriONlaK1wwSV7XkVLvyTtr0" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Downloaded.Files.Path.Enabled": "false",
    "Repository.Attach.Annotations": "false",
    "Repository.Attach.JavaDocs": "false",
    "Repository.Attach.Sources": "false",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "last_opened_file_path": "C:/Users/lance/Documents/CodingJava/JPA_Section22WorkingWithDatabases/src/META-INF",
    "project.structure.last.edited": "Libraries",
    "project.structure.proportion": "0.17",
    "project.structure.side.proportion": "0.2",
    "run.code.analysis.last.selected.profile": "pProject Default"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\lance\Documents\CodingJava\JPA_Section22WorkingWithDatabases\src\META-INF" />
      <recent name="C:\Users\lance\Documents\CodingJava\JPA_Section22WorkingWithDatabases\src" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="music" />
    </key>
  </component>
  <component name="RunManager" selected="Application.SongQuery">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <classpathModifications>
        <entry path="C:\Users\lance\Documents\CodingJava\JPA_Section22WorkingWithDatabases\src\META-INF" />
      </classpathModifications>
      <option name="MAIN_CLASS_NAME" value="Main" />
      <module name="JPA_Section22WorkingWithDatabases" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MainQuery" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="MainQuery" />
      <module name="JPA_Section22WorkingWithDatabases" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SongQuery" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="SongQuery" />
      <module name="JPA_Section22WorkingWithDatabases" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.SongQuery" />
        <item itemvalue="Application.Main" />
        <item itemvalue="Application.MainQuery" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="23dae86f-43d4-4f4d-8395-d7eab9a320c6" name="Changes" comment="" />
      <created>1715745930115</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1715745930115</updated>
    </task>
    <task id="LOCAL-00001" summary="Section 22.372(Working with Databases: Introduction to JPA and ORM):&#10;introduction to JPA, ORM concepts&#10;&#10;writing up demonstration of an Entity">
      <created>1715747039922</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1715747039922</updated>
    </task>
    <task id="LOCAL-00002" summary="Section 22.373(Working with Databases: JPA in action):&#10;set-up for Hibernate provider as demonstration; &#10;&#10;to use META-INF/ for persistence.xml, as well as to include META-INF to Run config of the Main of calling code&#10;&#10;played around with entityManager CRUD and real-time database changes">
      <created>1715749453764</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1715749453764</updated>
    </task>
    <task id="LOCAL-00003" summary="Section 22.374(Working with Databases: JPA with Related Tables):&#10;added Album entity,&#10;&#10;introduced to relational decorators and functionalities, translating knowledge of foreign keys to JPA. added annotations such as: OneToMany to define this entity is a parent, JoinColumn to define property to be 'foreign key' in children, GeneratedValue and strategy to differentiate from foreign key and primary key of a child entity;&#10;&#10;added functionalities such as: making child entity implement Comparable&lt;Entity&gt; for parent's removeDuplicates(); added parent's addAlbum() as a way to add a child">
      <created>1715753454542</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1715753454542</updated>
    </task>
    <task id="LOCAL-00004" summary="Section 22.375(Working with Databases: JPA Queries, JPQL): introduced to JPQL for database queries, and how to query with RegEx">
      <created>1715764653985</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1715764653985</updated>
    </task>
    <task id="LOCAL-00005" summary="Section 22.376(Working with Databases: JPA Queries, JPQL Joins):&#10;introduced to Tuple as a jakarta.persistence class for retrieving specific data from queries; demonstrated ability to use field aliases for readable code on retrieving data from tuples&#10;&#10;demonstrated receiving a Stream&lt;Tuple&gt; from a query and what it looks like to process tuple indexes;&#10;&#10;demonstrated JPQL joining through the parent class field (list)">
      <created>1715766294472</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1715766294472</updated>
    </task>
    <task id="LOCAL-00006" summary="Section 22.378(Working with Databases: JPA Challenge):&#10;Challenge complete!&#10;Implemented new JPA Entity, Song, with full functionality. &#10;Edited Entity Album with parent decorators, and .toString for child Song&#10;Implemented SongQuery to house the methods for this challenge.&#10;Implemented method to retrieve artists using JPQL where songTitle matched RegEx.&#10;Implemented an alternate version that strictly prints the artistName, albumName, and songName of the songTitle match through jakarta.persistence.Tuple output.">
      <created>1715828232143</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1715828232143</updated>
    </task>
    <task id="LOCAL-00007" summary="Section 22.378(Working with Databases: JPA Challenge):&#10;Bonus challenge progress so far.&#10;&#10;issues: getArtistsWithSongBuilder() outputs too many results. Suspected: artistSize * albumSize * songsStringMatch amount of Tuple objects (3 192 408 results), when I just want the one artist, the one album, for each song">
      <created>1715829829386</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1715829829386</updated>
    </task>
    <task id="LOCAL-00008" summary="Section 22.378(Working with Databases: JPA Challenge):&#10;Bonus challenge progress so far 2.&#10;&#10;not much changed; there are '18' songs matching for '%Soul%'. noticed that JPQL would output '18', when there are only 12 artists. It was a SELECT * FROM artists, so it would duplicate some artists.&#10;&#10;still cannot resolve CriteriaBuilder to select for only Artists of Songs where an Album had a Song matching '%Soul%'">
      <created>1715832420829</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1715832420829</updated>
    </task>
    <task id="LOCAL-00009" summary="Section 22.378(Working with Databases: JPA Challenge):&#10;reviewing my code after seeing Tim's solution:&#10;&#10;fixed my Album .toString() formatting error, added his result manipulation (cosmetic) on SongQuery,&#10;&#10;also adopted for 'var' with JPA query results, as to not require switching between List&lt;Artist&gt; List&lt;Tuple&gt; or List&lt;String&gt;">
      <created>1715833966822</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1715833966822</updated>
    </task>
    <option name="localTasksCounter" value="10" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Section 22.372(Working with Databases: Introduction to JPA and ORM):&#10;introduction to JPA, ORM concepts&#10;&#10;writing up demonstration of an Entity" />
    <MESSAGE value="Section 22.373(Working with Databases: JPA in action):&#10;set-up for Hibernate provider as demonstration; &#10;&#10;to use META-INF/ for persistence.xml, as well as to include META-INF to Run config of the Main of calling code&#10;&#10;played around with entityManager CRUD and real-time database changes" />
    <MESSAGE value="Section 22.374(Working with Databases: JPA with Related Tables):&#10;added Album entity,&#10;&#10;introduced to relational decorators and functionalities, translating knowledge of foreign keys to JPA. added annotations such as: OneToMany to define this entity is a parent, JoinColumn to define property to be 'foreign key' in children, GeneratedValue and strategy to differentiate from foreign key and primary key of a child entity;&#10;&#10;added functionalities such as: making child entity implement Comparable&lt;Entity&gt; for parent's removeDuplicates(); added parent's addAlbum() as a way to add a child" />
    <MESSAGE value="Section 22.375(Working with Databases: JPA Queries, JPQL): introduced to JPQL for database queries, and how to query with RegEx" />
    <MESSAGE value="Section 22.376(Working with Databases: JPA Queries, JPQL Joins):&#10;introduced to Tuple as a jakarta.persistence class for retrieving specific data from queries; demonstrated ability to use field aliases for readable code on retrieving data from tuples&#10;&#10;demonstrated receiving a Stream&lt;Tuple&gt; from a query and what it looks like to process tuple indexes;&#10;&#10;demonstrated JPQL joining through the parent class field (list)" />
    <MESSAGE value="Section 22.378(Working with Databases: JPA Challenge):&#10;Challenge complete!&#10;Implemented new JPA Entity, Song, with full functionality. &#10;Edited Entity Album with parent decorators, and .toString for child Song&#10;Implemented SongQuery to house the methods for this challenge.&#10;Implemented method to retrieve artists using JPQL where songTitle matched RegEx.&#10;Implemented an alternate version that strictly prints the artistName, albumName, and songName of the songTitle match through jakarta.persistence.Tuple output." />
    <MESSAGE value="Section 22.378(Working with Databases: JPA Challenge):&#10;Bonus challenge progress so far.&#10;&#10;issues: getArtistsWithSongBuilder() outputs too many results. Suspected: artistSize * albumSize * songsStringMatch amount of Tuple objects (3 192 408 results), when I just want the one artist, the one album, for each song" />
    <MESSAGE value="Section 22.378(Working with Databases: JPA Challenge):&#10;Bonus challenge progress so far 2.&#10;&#10;not much changed; there are '18' songs matching for '%Soul%'. noticed that JPQL would output '18', when there are only 12 artists. It was a SELECT * FROM artists, so it would duplicate some artists.&#10;&#10;still cannot resolve CriteriaBuilder to select for only Artists of Songs where an Album had a Song matching '%Soul%'" />
    <MESSAGE value="Section 22.378(Working with Databases: JPA Challenge):&#10;reviewing my code after seeing Tim's solution:&#10;&#10;fixed my Album .toString() formatting error, added his result manipulation (cosmetic) on SongQuery,&#10;&#10;also adopted for 'var' with JPA query results, as to not require switching between List&lt;Artist&gt; List&lt;Tuple&gt; or List&lt;String&gt;" />
    <option name="LAST_COMMIT_MESSAGE" value="Section 22.378(Working with Databases: JPA Challenge):&#10;reviewing my code after seeing Tim's solution:&#10;&#10;fixed my Album .toString() formatting error, added his result manipulation (cosmetic) on SongQuery,&#10;&#10;also adopted for 'var' with JPA query results, as to not require switching between List&lt;Artist&gt; List&lt;Tuple&gt; or List&lt;String&gt;" />
  </component>
</project>